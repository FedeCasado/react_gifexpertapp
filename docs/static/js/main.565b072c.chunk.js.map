{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGif","imagenes","GifexpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAKaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OACtCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEKI,MAAMF,GAFX,cAEbG,EAFa,gBAGIA,EAAUC,OAHd,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAaZM,GAbY,4CAAH,sDCDPO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGjC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,kCAAKA,EAAL,WCJCO,EAAU,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UAGtB,ECJuB,SAACA,GAExB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAfAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAd,GAEFY,EAAS,CACLf,KAAMG,EACNU,SAAS,SAItB,CAACpB,IAIGqB,EDlB4BI,CAAYzB,GAAlC0B,EAAb,EAAQnB,KAAea,EAAvB,EAAuBA,QAMvB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SAEQU,EAASjB,KAAI,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEYtBgB,EA9BM,WAGjB,MAAoCzC,mBAAS,CAAE,gBAA/C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAMA,OACI,qCACA,gDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAGA,6BAEI2C,EAAWnB,KAAI,SAAAT,GAAS,OACtB,cAAC,EAAD,CAEAA,UAAWA,GADLA,Y,MClBpB6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.565b072c.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\nexport const AddCategory = ({setCategorias}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2 ){\r\n            setCategorias(cats => [ inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n       \r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}","\r\n\r\n\r\nexport const getGifs = async (categoria) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=dC87kpDVUdEMT9gWTcIzxcGLpJ30NF4l`\r\n    const respuesta = await fetch(url)\r\n    const { data } = await respuesta.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}\r\n// getGifs();","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url}) => {\r\n    // console.log({id, title, url})\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title} />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGif } from '../hooks/useFetchGif'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ categoria }) => {\r\n\r\n\r\n    const { data:imagenes, loading } = useFetchGif(categoria);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__fadeIn'>{categoria}</h3>\r\n\r\n            {loading && <p className='animate__animated animate__flash'>Loading...</p>}\r\n\r\n            <div className='card-grid'>\r\n                {\r\n                    imagenes.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGif = (categoria) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(categoria)\r\n            .then(img => {\r\n\r\n                setState({\r\n                    data: img,\r\n                    loading: false\r\n                });\r\n\r\n            })\r\n    }, [categoria])\r\n\r\n\r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifexpertApp = () => {\r\n\r\n    // const categorias = ['One Ponch', 'Dragon Ball', 'Samurai X  '];\r\n    const [categorias, setCategorias] = useState([ 'Dragon Ball' ] );\r\n    \r\n    // const handleAdd = () => {\r\n    //     setcategorias([...categorias, 'SuperCampeones']);\r\n    // }\r\n\r\n    return(\r\n        <>\r\n        <h2>Gif Expert App</h2>\r\n        <AddCategory setCategorias={ setCategorias }/>\r\n        <hr />\r\n        \r\n        \r\n        <ol>\r\n        {\r\n            categorias.map(categoria => (\r\n              <GifGrid \r\n              key={ categoria }\r\n              categoria={categoria}\r\n              /> \r\n            ))\r\n        }\r\n        </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifexpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifexpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifexpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}